  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "brandon@hermiston.net"], ["bio", "MyText"], ["created_at", 2017-02-28 17:08:06 UTC], ["updated_at", 2017-02-28 17:08:06 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 16], ["summary", "MyText"], ["created_at", 2017-02-28 17:08:06 UTC], ["updated_at", 2017-02-28 17:08:06 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 16]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 16], ["post_id", 16], ["created_at", 2017-02-28 17:08:06 UTC], ["updated_at", 2017-02-28 17:08:06 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 16]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 16], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "terrence@lesch.biz"], ["bio", "MyText"], ["created_at", 2017-02-28 17:08:06 UTC], ["updated_at", 2017-02-28 17:08:06 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 17], ["summary", "MyText"], ["created_at", 2017-02-28 17:08:06 UTC], ["updated_at", 2017-02-28 17:08:06 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 17]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 17], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "alysha@wolff.io"], ["bio", "MyText"], ["created_at", 2017-03-01 00:26:30 UTC], ["updated_at", 2017-03-01 00:26:30 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 1], ["summary", "MyText"], ["created_at", 2017-03-01 00:26:30 UTC], ["updated_at", 2017-03-01 00:26:30 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 1], ["post_id", 1], ["created_at", 2017-03-01 00:26:30 UTC], ["updated_at", 2017-03-01 00:26:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "braeden@buckridge.co"], ["bio", "MyText"], ["created_at", 2017-03-01 00:26:30 UTC], ["updated_at", 2017-03-01 00:26:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 2], ["summary", "MyText"], ["created_at", 2017-03-01 00:26:30 UTC], ["updated_at", 2017-03-01 00:26:30 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 2]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 2], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "nathen.rosenbaum@lubowitzferry.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 00:35:31 UTC], ["updated_at", 2017-03-01 00:35:31 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 3], ["summary", "MyText"], ["created_at", 2017-03-01 00:35:31 UTC], ["updated_at", 2017-03-01 00:35:31 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 3]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 3], ["post_id", 3], ["created_at", 2017-03-01 00:35:31 UTC], ["updated_at", 2017-03-01 00:35:31 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 3]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 3], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "kari_champlin@torphyaltenwerth.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 00:35:31 UTC], ["updated_at", 2017-03-01 00:35:31 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 4], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 4], ["summary", "MyText"], ["created_at", 2017-03-01 00:35:31 UTC], ["updated_at", 2017-03-01 00:35:31 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 4]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 4], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "marlin@gleichnerprosacco.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:35:32 UTC], ["updated_at", 2017-03-01 00:35:32 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 5], ["summary", "MyText"], ["created_at", 2017-03-01 00:35:32 UTC], ["updated_at", 2017-03-01 00:35:32 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 5]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:35:32 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (2.89ms)
Completed 200 OK in 12ms (Views: 10.8ms | ActiveRecord: 0.4ms)
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.5ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "chandler@marvin.org"], ["bio", "MyText"], ["created_at", 2017-03-01 00:40:37 UTC], ["updated_at", 2017-03-01 00:40:37 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 6], ["summary", "MyText"], ["created_at", 2017-03-01 00:40:37 UTC], ["updated_at", 2017-03-01 00:40:37 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 6]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 6], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "abbey@keeling.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:40:37 UTC], ["updated_at", 2017-03-01 00:40:37 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 7], ["summary", "MyText"], ["created_at", 2017-03-01 00:40:37 UTC], ["updated_at", 2017-03-01 00:40:37 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 7]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 7], ["post_id", 7], ["created_at", 2017-03-01 00:40:38 UTC], ["updated_at", 2017-03-01 00:40:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 7]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 7], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "emmy_abbott@willms.io"], ["bio", "MyText"], ["created_at", 2017-03-01 00:40:38 UTC], ["updated_at", 2017-03-01 00:40:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 8], ["summary", "MyText"], ["created_at", 2017-03-01 00:40:38 UTC], ["updated_at", 2017-03-01 00:40:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 8]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:40:38 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (2.99ms)
Completed 200 OK in 12ms (Views: 11.1ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "jean@christiansen.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:41:32 UTC], ["updated_at", 2017-03-01 00:41:32 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 9], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 9], ["summary", "MyText"], ["created_at", 2017-03-01 00:41:32 UTC], ["updated_at", 2017-03-01 00:41:32 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 9]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.4ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 9], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "daryl@mertz.org"], ["bio", "MyText"], ["created_at", 2017-03-01 00:41:32 UTC], ["updated_at", 2017-03-01 00:41:32 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 10], ["summary", "MyText"], ["created_at", 2017-03-01 00:41:32 UTC], ["updated_at", 2017-03-01 00:41:32 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 10]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 10], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 10], ["post_id", 10], ["created_at", 2017-03-01 00:41:32 UTC], ["updated_at", 2017-03-01 00:41:32 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 10]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 10], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "lucas@borer.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:41:33 UTC], ["updated_at", 2017-03-01 00:41:33 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 11], ["summary", "MyText"], ["created_at", 2017-03-01 00:41:33 UTC], ["updated_at", 2017-03-01 00:41:33 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 11]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:41:33 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (3.04ms)
Completed 200 OK in 12ms (Views: 11.2ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "shawn@hane.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:47:37 UTC], ["updated_at", 2017-03-01 00:47:37 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 12], ["summary", "MyText"], ["created_at", 2017-03-01 00:47:37 UTC], ["updated_at", 2017-03-01 00:47:37 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 12]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 12], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "unique@beahanroob.org"], ["bio", "MyText"], ["created_at", 2017-03-01 00:47:38 UTC], ["updated_at", 2017-03-01 00:47:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 13], ["summary", "MyText"], ["created_at", 2017-03-01 00:47:38 UTC], ["updated_at", 2017-03-01 00:47:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 13]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:47:38 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (3.12ms)
Completed 200 OK in 12ms (Views: 11.6ms | ActiveRecord: 0.5ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "theodore.mitchell@johnsonbarton.co"], ["bio", "MyText"], ["created_at", 2017-03-01 00:47:38 UTC], ["updated_at", 2017-03-01 00:47:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 14], ["summary", "MyText"], ["created_at", 2017-03-01 00:47:38 UTC], ["updated_at", 2017-03-01 00:47:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 14]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 14], ["post_id", 14], ["created_at", 2017-03-01 00:47:38 UTC], ["updated_at", 2017-03-01 00:47:38 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 14]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 14], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "caidy@zboncak.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:47:38 UTC], ["updated_at", 2017-03-01 00:47:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 19:47:38 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.19ms)
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "brown_mitchell@jacobiohara.info"], ["bio", "MyText"], ["created_at", 2017-03-01 00:50:44 UTC], ["updated_at", 2017-03-01 00:50:44 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 16], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 16], ["summary", "MyText"], ["created_at", 2017-03-01 00:50:44 UTC], ["updated_at", 2017-03-01 00:50:44 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 16]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.4ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 16], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "jenifer@abernathy.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 00:50:44 UTC], ["updated_at", 2017-03-01 00:50:44 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 17], ["summary", "MyText"], ["created_at", 2017-03-01 00:50:44 UTC], ["updated_at", 2017-03-01 00:50:44 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 17]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 17], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 17], ["post_id", 16], ["created_at", 2017-03-01 00:50:44 UTC], ["updated_at", 2017-03-01 00:50:44 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 16]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 16], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "shane@gusikowski.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:50:45 UTC], ["updated_at", 2017-03-01 00:50:45 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 18], ["summary", "MyText"], ["created_at", 2017-03-01 00:50:45 UTC], ["updated_at", 2017-03-01 00:50:45 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 18]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:50:45 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 18], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (2.96ms)
Completed 200 OK in 12ms (Views: 11.5ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "rosalee.hansen@brown.name"], ["bio", "MyText"], ["created_at", 2017-03-01 00:50:45 UTC], ["updated_at", 2017-03-01 00:50:45 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 19:50:45 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 1ms (Views: 1.1ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 19:50:45 -0500
Processing by UsersController#create as HTML
  Parameters: {"username"=>"user", "email"=>"email@email.com"}
Completed 400 Bad Request in 0ms (ActiveRecord: 0.0ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "dennis.pfeffer@harber.name"], ["bio", "MyText"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 20], ["summary", "MyText"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 20]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:51:12 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 20], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (2.92ms)
Completed 200 OK in 12ms (Views: 11.0ms | ActiveRecord: 0.5ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "erica.witting@sawayn.info"], ["bio", "MyText"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 19:51:12 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.19ms)
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 19:51:12 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.13ms)
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.6ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "eliza_connelly@simonis.org"], ["bio", "MyText"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 23], ["summary", "MyText"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 23]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 23], ["post_id", 19], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 19]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 19], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "velva.ziemann@kohler.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 24], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 24], ["summary", "MyText"], ["created_at", 2017-03-01 00:51:12 UTC], ["updated_at", 2017-03-01 00:51:12 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 24]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 24], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "andy_durgan@walter.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 25], ["summary", "MyText"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 25]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 25], ["post_id", 21], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 21]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 21], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "lyda_raynor@daugherty.co"], ["bio", "MyText"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 26], ["summary", "MyText"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 26]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 26], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "casper@langworth.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 27], ["summary", "MyText"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 27]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:53:41 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (2.9ms)
Completed 200 OK in 11ms (Views: 10.6ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "arnoldo@torp.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 19:53:41 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.23ms)
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 19:53:41 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 00:53:41 UTC], ["updated_at", 2017-03-01 00:53:41 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.13ms)
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "kyle@dachpagac.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:54:21 UTC], ["updated_at", 2017-03-01 00:54:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 19:54:21 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.29ms)
Completed 200 OK in 7ms (Views: 6.7ms | ActiveRecord: 0.3ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 19:54:21 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 00:54:21 UTC], ["updated_at", 2017-03-01 00:54:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.15ms)
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "rudy_marquardt@miller.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:54:21 UTC], ["updated_at", 2017-03-01 00:54:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 32], ["summary", "MyText"], ["created_at", 2017-03-01 00:54:22 UTC], ["updated_at", 2017-03-01 00:54:22 UTC]]
  [1m[35mSQL (0.7ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 32]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 32], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "cora@abbott.com"], ["bio", "MyText"], ["created_at", 2017-03-01 00:54:22 UTC], ["updated_at", 2017-03-01 00:54:22 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 33], ["summary", "MyText"], ["created_at", 2017-03-01 00:54:22 UTC], ["updated_at", 2017-03-01 00:54:22 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 33]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:54:22 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (2.38ms)
Completed 200 OK in 6ms (Views: 5.7ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "constance@kunze.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:54:22 UTC], ["updated_at", 2017-03-01 00:54:22 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 34], ["summary", "MyText"], ["created_at", 2017-03-01 00:54:22 UTC], ["updated_at", 2017-03-01 00:54:22 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 34]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 34], ["post_id", 26], ["created_at", 2017-03-01 00:54:22 UTC], ["updated_at", 2017-03-01 00:54:22 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 26]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 26], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.6ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "eva@feeney.org"], ["bio", "MyText"], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 35], ["summary", "MyText"], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 35]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 35], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 35], ["post_id", 27], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 27]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 27], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "manley@goldnerbruen.co"], ["bio", "MyText"], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 36], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 36], ["summary", "MyText"], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 36]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:55:04 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 36], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (3.01ms)
Completed 200 OK in 12ms (Views: 11.0ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "bernice@klockoschmidt.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 19:55:04 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.17ms)
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "aleen_jacobi@rogahn.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 38], ["summary", "MyText"], ["created_at", 2017-03-01 00:55:04 UTC], ["updated_at", 2017-03-01 00:55:04 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 38]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 38], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "urban@ruecker.net"], ["bio", "MyText"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 19:56:26 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.3ms)
Completed 200 OK in 7ms (Views: 6.9ms | ActiveRecord: 0.3ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 19:56:26 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.15ms)
Completed 200 OK in 3ms (Views: 0.6ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "mireille@stehr.org"], ["bio", "MyText"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 41], ["summary", "MyText"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 41]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 19:56:26 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.96ms)
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "rasheed_boyer@kirlin.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 42], ["summary", "MyText"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 42]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 42], ["post_id", 31], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 31]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 31], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "vella@langworthgottlieb.co"], ["bio", "MyText"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 43], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 43], ["summary", "MyText"], ["created_at", 2017-03-01 00:56:26 UTC], ["updated_at", 2017-03-01 00:56:26 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 43]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 43], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "eudora@toywilderman.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 44], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 44], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 44]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/33" for 127.0.0.1 at 2017-02-28 20:01:02 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"33"}
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 33], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 44], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (3.01ms)
Completed 200 OK in 13ms (Views: 10.8ms | ActiveRecord: 0.5ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "meagan@hahn.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 45], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 45]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:01:02 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 45], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.27ms)
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "stuart@cremin.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 46], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 46]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 46], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 46], ["post_id", 35], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 35]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 35], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "audra@dubuque.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:01:02 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.19ms)
Completed 200 OK in 1ms (Views: 1.0ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:01:02 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.15ms)
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "ruben@balistreri.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 49], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 49], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:02 UTC], ["updated_at", 2017-03-01 01:01:02 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 49]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 49], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "rosalyn@borer.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:01:21 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.29ms)
Completed 200 OK in 7ms (Views: 6.9ms | ActiveRecord: 0.3ms)
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:01:21 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.18ms)
Completed 200 OK in 3ms (Views: 0.6ms | ActiveRecord: 0.5ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "kiara@harris.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 52], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 52], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 52]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 52], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "aubrey.sipes@fay.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 53], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 53], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 53]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:01:21 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 53], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.86ms)
Completed 200 OK in 5ms (Views: 4.7ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "lyda.doyle@balistrerihowell.io"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 54], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 54]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/39" for 127.0.0.1 at 2017-02-28 20:01:21 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"39"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 39], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (1.24ms)
Completed 200 OK in 3ms (Views: 1.4ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "rudolph_barrows@gusikowski.io"], ["bio", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 55], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 55], ["summary", "MyText"], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 55]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 55], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 55], ["post_id", 40], ["created_at", 2017-03-01 01:01:21 UTC], ["updated_at", 2017-03-01 01:01:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 40]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 40], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "arden@towne.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 56], ["summary", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 56]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:04:57 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 56], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (8.14ms)
Completed 200 OK in 17ms (Views: 16.0ms | ActiveRecord: 0.8ms)
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "ru@ferrymonahan.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 57], ["summary", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 57]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/42" for 127.0.0.1 at 2017-02-28 20:04:57 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"42"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 42], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 57], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (1.28ms)
Completed 200 OK in 3ms (Views: 1.5ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "evert@sauerhane.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "caandra@bernhardklocko.io"], ["bio", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 59], ["summary", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 59]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 58], ["post_id", 43], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 43]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "cortez.corkery@rath.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:04:57 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.19ms)
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:04:57 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.14ms)
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "margret.conn@grady.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 62], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 62], ["summary", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 62]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 62], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "guiseppe@roberts.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 63], ["summary", "MyText"], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 63]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 63], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 63], ["post_id", 45], ["created_at", 2017-03-01 01:04:57 UTC], ["updated_at", 2017-03-01 01:04:57 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 45]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 45], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "brigitte@ruecker.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 64], ["summary", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 64]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 64], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 64], ["post_id", 46], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 46]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 46], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "camilla.bergstrom@millersauer.io"], ["bio", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 65], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 65], ["summary", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 65]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 65], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "lonie@ledner.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 66], ["summary", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 66]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/48" for 127.0.0.1 at 2017-02-28 20:05:23 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"48"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 48], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (2.88ms)
Completed 200 OK in 12ms (Views: 10.1ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "doyle.eichmann@hegmann.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 67], ["summary", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 67]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:05:23 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 67], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.66ms)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "efrain.jacobson@gradyreichert.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "murray.marquardt@turcotte.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 69], ["summary", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 69]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 68], ["post_id", 50], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 50]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/50/comments" for 127.0.0.1 at 2017-02-28 20:05:23 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"50"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 50], ["LIMIT", 1]]
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "leann@mckenzie.io"], ["bio", "MyText"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:05:23 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:05:23 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:05:23 UTC], ["updated_at", 2017-03-01 01:05:23 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "rafaela@schultzkohler.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:07:38 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.33ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.3ms)
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:07:38 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.14ms)
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "asa@okeefe.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 74], ["summary", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 74]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 74], ["LIMIT", 1]]
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 74], ["post_id", 51], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 51]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 51], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "bartholome@fritsch.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 75], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 75], ["summary", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 75]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 75], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "oswaldo@lockmanmueller.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 76], ["summary", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 76]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:07:38 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 76], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (2.0ms)
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "trinity@wunsch.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "evert.bauch@friesenklein.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 78], ["summary", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 78]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 77], ["post_id", 54], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 54]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/54/comments" for 127.0.0.1 at 2017-02-28 20:07:38 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"54"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 54], ["LIMIT", 1]]
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 54]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.21ms)
Completed 200 OK in 5ms (Views: 2.9ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "ulices.eichmann@ernser.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 79], ["summary", "MyText"], ["created_at", 2017-03-01 01:07:38 UTC], ["updated_at", 2017-03-01 01:07:38 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 79]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/55" for 127.0.0.1 at 2017-02-28 20:07:38 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"55"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 55], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 79], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (1.31ms)
Completed 200 OK in 2ms (Views: 1.4ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (6.8ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "elisha@labadiedenesik.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 80], ["summary", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 80]]
  [1m[35m (0.6ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 80], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 80], ["post_id", 56], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 56]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 56], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "chance@batz.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 81], ["summary", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 81]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/57" for 127.0.0.1 at 2017-02-28 20:09:42 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"57"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 57], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 81], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (3.69ms)
Completed 200 OK in 17ms (Views: 14.6ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "penelope.emmerich@abbott.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 82], ["summary", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 82]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:09:42 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 82], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.23ms)
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "trisha@lebsack.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "litzy_sipes@rolfson.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 84], ["summary", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 84]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 83], ["post_id", 59], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 59]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/59/comments" for 127.0.0.1 at 2017-02-28 20:09:42 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"59"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 59], ["LIMIT", 1]]
  [1m[36mComment Load (0.1ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 59]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.16ms)
Completed 200 OK in 4ms (Views: 2.2ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "alyce.torp@marquardt.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:09:42 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.23ms)
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:09:42 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.21ms)
Completed 200 OK in 3ms (Views: 0.8ms | ActiveRecord: 0.6ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "maye@von.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 87], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 87], ["summary", "MyText"], ["created_at", 2017-03-01 01:09:42 UTC], ["updated_at", 2017-03-01 01:09:42 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 87]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 87], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "janae_ondricka@oberbrunner.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 88], ["summary", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 88]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/61" for 127.0.0.1 at 2017-02-28 20:10:53 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"61"}
  [1m[36mPost Load (0.4ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 61], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 88], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (5.52ms)
Completed 200 OK in 19ms (Views: 15.6ms | ActiveRecord: 0.7ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "aleen_kuhn@gulgowski.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "caie_fisher@rempelharris.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 90], ["summary", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 90]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 89], ["post_id", 62], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 62]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/62/comments" for 127.0.0.1 at 2017-02-28 20:10:53 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"62"}
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 62], ["LIMIT", 1]]
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 62]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 10ms (Views: 2.7ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "bernadette_halvorson@schimmel.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 91], ["summary", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 91]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:10:53 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 91], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.64ms)
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "vince_rohan@white.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:10:53 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 1ms (Views: 1.0ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:10:53 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.13ms)
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "stephany.greenfelder@doylewolf.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 94], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 94], ["summary", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 94]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 94], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "liliana_cummings@schaefer.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 95], ["summary", "MyText"], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 95]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 95], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 95], ["post_id", 65], ["created_at", 2017-03-01 01:10:53 UTC], ["updated_at", 2017-03-01 01:10:53 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 65]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 65], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "jeramie@krajcik.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 96], ["summary", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 96]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/66" for 127.0.0.1 at 2017-02-28 20:17:30 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"66"}
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 66], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 96], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (5.6ms)
Completed 200 OK in 17ms (Views: 13.2ms | ActiveRecord: 0.7ms)
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "maribel.rippin@sauer.io"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 97], ["summary", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 97]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:17:30 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 97], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.41ms)
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "gregoria@rath.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "salma@ruecker.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 99], ["summary", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 99]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 98], ["post_id", 68], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 68]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/68/comments" for 127.0.0.1 at 2017-02-28 20:17:30 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"68"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 68], ["LIMIT", 1]]
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 68]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.21ms)
Completed 200 OK in 9ms (Views: 2.5ms | ActiveRecord: 0.5ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "everardo_heel@krajcik.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:17:30 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 1ms (Views: 1.0ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
UserHttpTest: test_it_should_get_posts_for_a_user
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "janick_dibbert@daugherty.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 101], ["summary", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 101]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users/101/posts" for 127.0.0.1 at 2017-02-28 20:17:30 -0500
Processing by UsersController#posts as HTML
  Parameters: {"id"=>"101"}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 101], ["LIMIT", 1]]
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts" WHERE "posts"."user_id" = $1[0m  [["user_id", 101]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.39ms)
Completed 200 OK in 5ms (Views: 2.1ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:17:30 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.16ms)
Completed 200 OK in 3ms (Views: 0.6ms | ActiveRecord: 0.7ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "deven_thiel@towne.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 103], ["summary", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 103]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 103], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 103], ["post_id", 70], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 70]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 70], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "concepcion_boyle@wuckert.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 104], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 104], ["summary", "MyText"], ["created_at", 2017-03-01 01:17:30 UTC], ["updated_at", 2017-03-01 01:17:30 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 104]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 104], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
UserHttpTest: test_it_should_get_posts_for_a_user
-------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "angel@mann.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 105], ["summary", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 105]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users/105/posts" for 127.0.0.1 at 2017-02-28 20:18:21 -0500
Processing by UsersController#posts as HTML
  Parameters: {"id"=>"105"}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 105], ["LIMIT", 1]]
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts" WHERE "posts"."user_id" = $1[0m  [["user_id", 105]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.66ms)
Completed 200 OK in 26ms (Views: 12.7ms | ActiveRecord: 0.7ms)
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:18:21 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.17ms)
Completed 200 OK in 3ms (Views: 0.6ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "greyson.collins@waters.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:18:21 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.21ms)
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "mafalda.koch@goldner.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 108], ["summary", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 108]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/73" for 127.0.0.1 at 2017-02-28 20:18:21 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"73"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 73], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 108], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (2.03ms)
Completed 200 OK in 4ms (Views: 2.2ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "tyra@kleinbergstrom.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "vivian_ebert@friesengrant.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 110], ["summary", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 110]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 109], ["post_id", 74], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 74]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/74/comments" for 127.0.0.1 at 2017-02-28 20:18:21 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"74"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 74], ["LIMIT", 1]]
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 74]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.27ms)
Completed 200 OK in 6ms (Views: 3.5ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_delete_a_post
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "kariane@shields.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 111], ["summary", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 111]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "melvin.torp@jerdeheathcote.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 112], ["summary", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 112]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:18:21 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 112], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.49ms)
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "murphy_vonrueden@lind.io"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 113], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 113], ["summary", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 113]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 113], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "jayce.herzog@hueltromp.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 114], ["summary", "MyText"], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 114]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 114], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 114], ["post_id", 78], ["created_at", 2017-03-01 01:18:21 UTC], ["updated_at", 2017-03-01 01:18:21 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 78]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 78], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "maci@macejkovic.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:19:04 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.3ms)
Completed 200 OK in 8ms (Views: 6.9ms | ActiveRecord: 0.4ms)
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
UserHttpTest: test_it_should_get_posts_for_a_user
-------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "deontae@dietrich.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 116], ["summary", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 116]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users/116/posts" for 127.0.0.1 at 2017-02-28 20:19:04 -0500
Processing by UsersController#posts as HTML
  Parameters: {"id"=>"116"}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 116], ["LIMIT", 1]]
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts" WHERE "posts"."user_id" = $1[0m  [["user_id", 116]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.23ms)
Completed 200 OK in 17ms (Views: 6.9ms | ActiveRecord: 0.5ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:19:04 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.14ms)
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "leann@hegmannhammes.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 118], ["summary", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 118]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 118], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 118], ["post_id", 80], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 80]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 80], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "lorna.rowe@boylegottlieb.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 119], ["summary", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 119]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:19:04 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 119], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (1.96ms)
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_delete_a_post
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "devon@wintheiser.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 120], ["summary", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 120]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started DELETE "/posts/82" for 127.0.0.1 at 2017-02-28 20:19:04 -0500
Processing by PostsController#destroy as HTML
  Parameters: {"id"=>"82"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 82], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = $1[0m  [["id", 82]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 120], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) - 1 WHERE "users"."id" = $1[0m  [["id", 120]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "imelda@strosin.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "judson@gerlachpouros.info"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 122], ["summary", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 122]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 121], ["post_id", 83], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 83]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/83/comments" for 127.0.0.1 at 2017-02-28 20:19:04 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"83"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 83], ["LIMIT", 1]]
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 83]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.23ms)
Completed 200 OK in 4ms (Views: 2.4ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "tad.olson@jacobson.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 123], ["summary", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 123]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/84" for 127.0.0.1 at 2017-02-28 20:19:04 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"84"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 84], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 123], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (1.62ms)
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "jettie.wisozk@keler.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 124], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 124], ["summary", "MyText"], ["created_at", 2017-03-01 01:19:04 UTC], ["updated_at", 2017-03-01 01:19:04 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 124]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 124], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.4ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "shayne@monahanohara.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 125], ["summary", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 125]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 125], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 125], ["post_id", 86], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 86]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 86], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "curt_davis@davisglover.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 126], ["summary", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 126]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:51:58 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 126], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (3.73ms)
Completed 200 OK in 14ms (Views: 13.0ms | ActiveRecord: 0.6ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_delete_a_post
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "justine.dubuque@kulaswyman.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 127], ["summary", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 127]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "posts"[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started DELETE "/posts/88" for 127.0.0.1 at 2017-02-28 20:51:58 -0500
Processing by PostsController#destroy as HTML
  Parameters: {"id"=>"88"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 88], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = $1[0m  [["id", 88]]
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 127], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) - 1 WHERE "users"."id" = $1[0m  [["id", 127]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Completed 200 OK in 5ms (Views: 0.1ms | ActiveRecord: 1.1ms)
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "posts"[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "abigail@mertz.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 128], ["summary", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 128]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/89" for 127.0.0.1 at 2017-02-28 20:51:58 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"89"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 89], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 128], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (1.17ms)
Completed 200 OK in 2ms (Views: 1.3ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "alejandrin@farrelldickens.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "aimee_kiehn@kulas.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 130], ["summary", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 130]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 129], ["post_id", 90], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 90]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/90/comments" for 127.0.0.1 at 2017-02-28 20:51:58 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"90"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 90], ["LIMIT", 1]]
  [1m[36mComment Load (0.3ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 90]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 4ms (Views: 2.6ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "liliane_ziemann@pacocharunolfsdottir.net"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:51:58 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.19ms)
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
UserHttpTest: test_it_should_get_posts_for_a_user
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "trinity.bradtke@padberg.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 132], ["summary", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 132]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users/132/posts" for 127.0.0.1 at 2017-02-28 20:51:58 -0500
Processing by UsersController#posts as HTML
  Parameters: {"id"=>"132"}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 132], ["LIMIT", 1]]
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts" WHERE "posts"."user_id" = $1[0m  [["user_id", 132]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.46ms)
Completed 200 OK in 6ms (Views: 2.3ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:51:58 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.19ms)
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.5ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "shayne_ruecker@mertz.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35m (0.2ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 134], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 134], ["summary", "MyText"], ["created_at", 2017-03-01 01:51:58 UTC], ["updated_at", 2017-03-01 01:51:58 UTC]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 134]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 134], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------
CommentTest: test_: comments should belong to post. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------------------
CommentTest: test_: validations should require body to be set. 
---------------------------------------------------------------
  [1m[35m (0.3ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_get_all_posts
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "enola_krajcik@bayer.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 135], ["summary", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 135]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts" for 127.0.0.1 at 2017-02-28 20:52:16 -0500
Processing by PostsController#index as HTML
  [1m[36mPost Load (0.4ms)[0m  [1m[34mSELECT "posts".* FROM "posts"[0m
[active_model_serializers]   [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 135], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (7.47ms)
Completed 200 OK in 16ms (Views: 15.2ms | ActiveRecord: 0.9ms)
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------
PostHttpTest: test_it_should_delete_a_post
------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "richard_weinat@bradtke.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 136], ["summary", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 136]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "posts"[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started DELETE "/posts/94" for 127.0.0.1 at 2017-02-28 20:52:16 -0500
Processing by PostsController#destroy as HTML
  Parameters: {"id"=>"94"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 94], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  [1m[31mDELETE FROM "posts" WHERE "posts"."id" = $1[0m  [["id", 94]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 136], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) - 1 WHERE "users"."id" = $1[0m  [["id", 136]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Completed 200 OK in 6ms (Views: 0.1ms | ActiveRecord: 1.6ms)
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "posts"[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------
PostHttpTest: test_it_should_get_a_specific_post
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "norma.wisozk@lindgrenfahey.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 137], ["summary", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 137]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/95" for 127.0.0.1 at 2017-02-28 20:52:16 -0500
Processing by PostsController#show as HTML
  Parameters: {"id"=>"95"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 95], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 137], ["LIMIT", 1]]
[active_model_serializers] Rendered PostSerializer with ActiveModelSerializers::Adapter::Attributes (1.32ms)
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
---------------------------------------------------
PostHttpTest: test_it_should_get_comments_on_a_post
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "wilton@casperwisozk.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "nannie@feestprohaska.biz"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 139], ["summary", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 139]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "MyText"], ["user_id", 138], ["post_id", 96], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 96]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/posts/96/comments" for 127.0.0.1 at 2017-02-28 20:52:16 -0500
Processing by PostsController#comments as HTML
  Parameters: {"id"=>"96"}
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."id" = $1 LIMIT $2[0m  [["id", 96], ["LIMIT", 1]]
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT "comments".* FROM "comments" WHERE "comments"."post_id" = $1[0m  [["post_id", 96]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.2ms)
Completed 200 OK in 10ms (Views: 2.5ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------
UserHttpTest: test_it_should_make_a_user
----------------------------------------
Started POST "/users" for 127.0.0.1 at 2017-02-28 20:52:16 -0500
Processing by UsersController#create as HTML
  Parameters: {"user"=>{"username"=>"user", "email"=>"email@email.com", "bio"=>"bio"}}
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "user"], ["email", "email@email.com"], ["bio", "bio"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
[active_model_serializers] Rendered UserSerializer with ActiveModelSerializers::Adapter::Attributes (0.12ms)
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.4ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
UserHttpTest: test_it_should_get_all_the_users
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "remington.adams@von.name"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users" for 127.0.0.1 at 2017-02-28 20:52:16 -0500
Processing by UsersController#index as HTML
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.19ms)
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------
UserHttpTest: test_it_should_get_posts_for_a_user
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "alisa_hartmann@wilderman.org"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 142], ["summary", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 142]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
Started GET "/users/142/posts" for 127.0.0.1 at 2017-02-28 20:52:16 -0500
Processing by UsersController#posts as HTML
  Parameters: {"id"=>"142"}
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 142], ["LIMIT", 1]]
  [1m[36mPost Load (0.2ms)[0m  [1m[34mSELECT "posts".* FROM "posts" WHERE "posts"."user_id" = $1[0m  [["user_id", 142]]
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with ActiveModelSerializers::Adapter::Attributes (0.36ms)
Completed 200 OK in 6ms (Views: 2.4ms | ActiveRecord: 0.3ms)
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------
PostTest: test_: posts should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
PostTest: test_: posts should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_: validations should require body to be set. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
------------------------------------------------------------
PostTest: test_comments_are_automatically_counted_for_a_post
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "myrtis_walsh@gottlieb.co"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 143], ["summary", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 143]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 143], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "comments" ("body", "user_id", "post_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["body", "This is a comment"], ["user_id", 143], ["post_id", 98], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "posts" SET "comments_count" = COALESCE("comments_count", 0) + 1 WHERE "posts"."id" = $1[0m  [["id", 98]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mComment Load (0.2ms)[0m  [1m[34mSELECT  "comments".* FROM "comments" WHERE "comments"."post_id" = $1 ORDER BY "comments"."id" ASC LIMIT $2[0m  [["post_id", 98], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
PostTest: test_: validations should require title to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_posts_are_counter_cached_for_a_user
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "email", "bio", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "MyString"], ["email", "garrick@becker.com"], ["bio", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  [1m[35mSAVEPOINT active_record_1[0m
  [1m[36mUser Load (0.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 144], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "posts" ("title", "body", "user_id", "summary", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["title", "MyString"], ["body", "MyText"], ["user_id", 144], ["summary", "MyText"], ["created_at", 2017-03-01 01:52:16 UTC], ["updated_at", 2017-03-01 01:52:16 UTC]]
  [1m[35mSQL (0.2ms)[0m  [1m[33mUPDATE "users" SET "posts_count" = COALESCE("posts_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 144]]
  [1m[35m (0.1ms)[0m  [1m[35mRELEASE SAVEPOINT active_record_1[0m
  [1m[36mPost Load (0.3ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE "posts"."user_id" = $1 ORDER BY "posts"."id" ASC LIMIT $2[0m  [["user_id", 144], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
----------------------------------------------------------------
UserTest: test_: validations should require username to be set. 
----------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-------------------------------------------------------------
UserTest: test_: validations should require email to be set. 
-------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
--------------------------------------------------
UserTest: test_: users should have many comments. 
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
-----------------------------------------------
UserTest: test_: users should have many posts. 
-----------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
